{
  "filePath": "sample1/main.bal",
  "description": "Test adding a rabbitmq service",
  "serviceInitModel": {
    "id": "10",
    "displayName": "Kafka Event Handler",
    "description": "Create a service to handle messages from Kafka topic(s)",
    "orgName": "ballerinax",
    "packageName": "kafka",
    "moduleName": "kafka",
    "version": "4.5.0",
    "type": "kafka",
    "icon": "https://bcentral-packageicons.azureedge.net/images/ballerinax_kafka_4.5.0.png",
    "properties": {
      "boostrapServers": {
        "metadata": {
          "label": "Bootstrap Servers",
          "description": "List of remote server endpoints of the Kafka brokers"
        },
        "codedata": {
          "argType": "LISTENER_PARAM_REQUIRED"
        },
        "placeholder": "\"localhost:9092\"",
        "valueType": "EXPRESSION",
        "valueTypeConstraint": "string|string[]",
        "value": "\"localhost:9092\"",
        "items": [],
        "typeMembers": [],
        "enabled": true,
        "editable": true,
        "optional": false,
        "advanced": false
      },
      "topics": {
        "metadata": {
          "label": "Topic(s)",
          "description": "The topic(s) to subscribe to"
        },
        "codedata": {
          "argType": "LISTENER_PARAM_INCLUDED_FILED"
        },
        "placeholder": "\"myTopic\"",
        "valueType": "EXPRESSION",
        "valueTypeConstraint": "string|string[]",
        "value": "\"sales-data\"",
        "items": [],
        "typeMembers": [],
        "enabled": true,
        "editable": true,
        "optional": false,
        "advanced": false
      }
    }
  },
  "output": {
    "sample1/main.bal": [
      {
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 0
          }
        },
        "newText": "\nimport ballerinax/kafka;\n"
      },
      {
        "range": {
          "start": {
            "line": 57,
            "character": 3
          },
          "end": {
            "line": 57,
            "character": 3
          }
        },
        "newText": "\nlistener kafka:Listener kafkaListener = new (\"localhost:9092\", topics = \"sales-data\");\nservice kafka:Service on kafkaListener {\n\tremote function onConsumerRecord(kafka:AnydataConsumerRecord[] records, kafka:Caller caller) returns error? {\n\t\tdo {\n\t\t} on fail error err {\n\t\t\t// handle error\n\t\t\treturn error(\"unhandled error\", err);\n\t\t}\n\t}\n\n\tremote function onError(kafka:Error kafkaError) returns error? {\n\t\tdo {\n\t\t} on fail error err {\n\t\t\t// handle error\n\t\t\treturn error(\"unhandled error\", err);\n\t\t}\n\t}\n}\n"
      }
    ]
  }
}
