{
  "filePath": "sample9/main.bal",
  "description": "Get the http service model with a contract type",
  "start": {
    "line": 4,
    "offset": 0
  },
  "end": {
    "line": 40,
    "offset": 0
  },
  "response": {
    "id": "0",
    "name": "HTTP Service",
    "type": "http",
    "moduleName": "http",
    "orgName": "ballerina",
    "version": "2.14.0",
    "packageName": "http",
    "listenerProtocol": "http",
    "icon": "http://localhost:8080/icons/http.png",
    "documentation": {
      "metadata": {
        "label": "Description",
        "description": "The description of the service"
      },
      "codedata": {
        "type": "DOCUMENTATION"
      },
      "valueType": "STRING",
      "valueTypeConstraint": "string",
      "enabled": true,
      "editable": true,
      "optional": true,
      "advanced": false
    },
    "properties": {
      "listener": {
        "metadata": {
          "label": "Listeners",
          "description": ""
        },
        "codedata": {
          "type": "LISTENER"
        },
        "placeholder": "",
        "valueType": "MULTIPLE_SELECT",
        "valueTypeConstraint": "http:Listener",
        "value": "httpListener",
        "values": [],
        "items": [
          "httpListener",
          "(+) Create and use the default HTTP listener (port: 9090)"
        ],
        "enabled": true,
        "editable": false,
        "optional": false,
        "advanced": false
      },
      "serviceTypeName": {
        "metadata": {
          "label": "Service Type Name",
          "description": "The name of the service contract type generated from the OpenAPI specification"
        },
        "codedata": {
          "type": "SERVICE_BASEPATH"
        },
        "placeholder": "",
        "valueType": "IDENTIFIER",
        "valueTypeConstraint": "string",
        "value": "PizzaShop",
        "enabled": true,
        "editable": true,
        "optional": false,
        "advanced": false
      }
    },
    "codedata": {
      "lineRange": {
        "fileName": "main.bal",
        "startLine": {
          "line": 4,
          "offset": 0
        },
        "endLine": {
          "line": 40,
          "offset": 1
        }
      }
    },
    "functions": []
  }
}
