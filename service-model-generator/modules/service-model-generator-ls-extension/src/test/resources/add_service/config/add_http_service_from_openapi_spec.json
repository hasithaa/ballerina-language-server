{
  "filePath": "sample1/main.bal",
  "description": "Test adding an HTTP service from OpenAPI spec",
  "service": {
    "id": "0",
    "name": "HTTP Service",
    "type": "http",
    "moduleName": "http",
    "orgName": "ballerina",
    "version": "2.14.0",
    "packageName": "http",
    "listenerProtocol": "http",
    "icon": "http://localhost:8080/icons/http.png",
    "properties": {
      "listener": {
        "metadata": {
          "label": "Listeners",
          "description": ""
        },
        "codedata": {
          "type": "LISTENER"
        },
        "placeholder": "",
        "valueType": "MULTIPLE_SELECT",
        "valueTypeConstraint": "http:Listener",
        "value": "",
        "values": [
          "(+) Create and use the default HTTP listener (port: 9090)"
        ],
        "items": [
          "(+) Create and use the default HTTP listener (port: 9090)"
        ],
        "enabled": true,
        "editable": true,
        "optional": false,
        "advanced": false
      },
      "designApproach": {
        "metadata": {
          "label": "Contract",
          "description": "Service Contract"
        },
        "placeholder": "",
        "valueType": "CHOICE",
        "value": "",
        "choices": [
          {
            "metadata": {
              "label": "Design From Scratch",
              "description": "Design the service from scratch"
            },
            "placeholder": "true",
            "valueType": "FORM",
            "value": "true",
            "properties": {
              "basePath": {
                "metadata": {
                  "label": "Service Base Path",
                  "description": ""
                },
                "codedata": {
                  "type": "SERVICE_BASEPATH"
                },
                "placeholder": "",
                "valueType": "SERVICE_PATH",
                "valueTypeConstraint": "string",
                "value": "/",
                "enabled": true,
                "editable": true,
                "optional": false,
                "advanced": false
              },
              "annotServiceConfig": {
                "metadata": {
                  "label": "Service Configuration",
                  "description": "Define advanced configurations like service level security, etc."
                },
                "codedata": {
                  "type": "ANNOTATION_ATTACHMENT",
                  "originalName": "ServiceConfig"
                },
                "placeholder": "{}",
                "valueType": "EXPRESSION",
                "valueTypeConstraint": "http:HttpServiceConfig",
                "value": "",
                "typeMembers": [
                  {
                    "type": "HttpServiceConfig",
                    "packageInfo": "ballerina:http:2.14.0",
                    "kind": "RECORD_TYPE",
                    "selected": true
                  }
                ],
                "enabled": true,
                "editable": true,
                "optional": true,
                "advanced": true
              }
            },
            "enabled": false,
            "editable": true,
            "optional": false,
            "advanced": false
          },
          {
            "metadata": {
              "label": "Import From OpenAPI Specification",
              "description": "Implement the service from an OpenAPI specification"
            },
            "placeholder": "true",
            "valueType": "FORM",
            "value": "true",
            "properties": {
              "spec": {
                "metadata": {
                  "label": "OpenAPI Specification",
                  "description": "Provide an OpenAPI specification to generate the resources"
                },
                "codedata": {
                  "type": "OPENAPI"
                },
                "placeholder": "",
                "valueType": "FILE_SELECT",
                "valueTypeConstraint": "string",
                "value": "openapi.yaml",
                "enabled": true,
                "editable": true,
                "optional": true,
                "advanced": false
              },
              "serviceTypeName": {
                "metadata": {
                  "label": "Service Type Name",
                  "description": "The name of the service contract type generated from the OpenAPI specification"
                },
                "codedata": {
                  "type": "SERVICE_BASEPATH"
                },
                "placeholder": "",
                "valueType": "IDENTIFIER",
                "valueTypeConstraint": "string",
                "value": "WeatherAPI",
                "enabled": true,
                "editable": true,
                "optional": false,
                "advanced": false
              }
            },
            "enabled": true,
            "editable": true,
            "optional": false,
            "advanced": false
          }
        ],
        "enabled": true,
        "editable": true,
        "optional": false,
        "advanced": false
      }
    },
    "functions": []
  },
  "output": {
    "sample1/main.bal": [
      {
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 0
          }
        },
        "newText": "\nimport ballerina/http;\n"
      },
      {
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 0
          }
        },
        "newText": "\nlistener http:Listener httpDefaultListener = http:getDefaultListener();\n"
      },
      {
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 0
          }
        },
        "newText": "service WeatherAPI on httpDefaultListener {\n\n\tresource function get albums (string[] _artists_, string? X\\-API\\-VERSION) returns album[]|ErrorPayloadBadRequest {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tresource function post albums (album payload) returns album|ErrorPayloadBadRequest {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn {artist: (), _id: (), title: ()};\n\t\t}\n\t}\n\n\tresource function get albums/[string _id] () returns album|MessageNotFound|ErrorPayloadBadRequest {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn {artist: (), _id: (), title: ()};\n\t\t}\n\t}\n\n\tresource function get albums/[string id]/artist () returns album_aRTIST|ErrorPayloadBadRequest {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn {albums: (), name: (), id: ()};\n\t\t}\n\t}\n}\n"
      }
    ],
    "sample1/service_contract_WeatherAPI.bal": [
      {
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 0
          }
        },
        "newText": "// AUTO-GENERATED FILE.\n// This file is auto-generated by the Ballerina OpenAPI tool.\n\nimport ballerina/http;\n\n@http:ServiceConfig {basePath: \"/api/v1\"}\ntype WeatherAPI service object {\n    *http:ServiceContract;\n    resource function get albums(string[] _artists_ = [], @http:Header string? X\\-API\\-VERSION = \"v1\") returns album[]|ErrorPayloadBadRequest;\n    resource function post albums(@http:Payload album payload) returns album|ErrorPayloadBadRequest;\n    resource function get albums/[string _id]() returns album|MessageNotFound|ErrorPayloadBadRequest;\n    resource function get albums/[string id]/artist() returns album_aRTIST|ErrorPayloadBadRequest;\n};\n\npublic type ErrorPayloadBadRequest record {|\n    *http:BadRequest;\n    ErrorPayload body;\n|};\n\npublic type ErrorPayload record {\n    string? timestamp;\n    int? status;\n    string? reason;\n    string? message;\n    string? path;\n    string? method;\n};\n\npublic type album record {|\n    string? _id;\n    string? title;\n    string? artist;\n|};\n\npublic type album_aRTIST record {|\n    string? id;\n    string? name;\n    album[]? albums;\n|};\n\npublic type MessageNotFound record {|\n    *http:NotFound;\n    message body;\n|};\n\npublic type message record {|\n    string? message;\n    int? code;\n|};\n"
      }
    ]
  }
}
